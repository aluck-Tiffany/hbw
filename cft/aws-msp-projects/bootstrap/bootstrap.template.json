{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Bootstrap API Gateway",
  "Parameters": {
    "PolicyList": {
      "Type": "String",
      "Description": "Format: windows2016:14,windows2012r2:7"
    },
    "CertificateArn": {
      "Type": "String"
    },
    "CICDBucket": {
      "Description": "CI/CD Functions Bucket",
      "Type": "String",
      "Default": "enabling-services-ci-cd"
    },
    "BootstrapVersion": {
      "Type": "String",
      "Default": "latest"
    }
  },
  "Resources": {
    "Function": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "bootstrap",
        "Code": {
          "S3Bucket": {
            "Ref": "CICDBucket"
          },
          "S3Key": {
            "Fn::Sub": "aws-msp-projects/bootstrap/${BootstrapVersion}/function.zip"
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "Role",
            "Arn"
          ]
        },
        "Runtime": "nodejs6.10",
        "Environment": {
          "Variables": {
            "baseUrl": {
              "Fn::ImportValue": "Route53ZoneName"
            },
            "policyList": {
              "Ref": "PolicyList"
            }
          }
        }
      }
    },
    "Role": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "Permission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:invokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Function",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*"
        }
      }
    },
    "ApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "bootstrap",
        "Body": {
          "swagger": "2.0",
          "info": {
            "version": "v1.0",
            "title": "bootstrap"
          },
          "basePath": "/latest",
          "schemes": [
            "https"
          ],
          "paths": {
            "/default": {
              "get": {
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:bootstrap/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            },
            "/custom": {
              "get": {
                "produces": [
                  "application/json"
                ],
                "responses": {
                  "200": {
                    "description": "200 response",
                    "schema": {
                      "$ref": "#/definitions/Empty"
                    }
                  }
                },
                "x-amazon-apigateway-integration": {
                  "responses": {
                    "default": {
                      "statusCode": "200"
                    }
                  },
                  "uri": {
                    "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:bootstrap/invocations"
                  },
                  "passthroughBehavior": "when_no_match",
                  "httpMethod": "POST",
                  "contentHandling": "CONVERT_TO_TEXT",
                  "type": "aws_proxy"
                }
              }
            }
          },
          "definitions": {
            "Empty": {
              "type": "object",
              "title": "Empty Schema"
            }
          }
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        }
      }
    },
    "Deployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGateway"
        }
      }
    },
    "Stage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "Deployment"
        },
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "StageName": "latest"
      }
    },
    "APIDomainName": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "DomainName": {
          "Fn::Join": [
            "",
            [
              "bootstrap.",
              {
                "Fn::ImportValue": "Route53ZoneName"
              }
            ]
          ]
        },
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "CertificateArn": {
          "Ref": "CertificateArn"
        }
      }
    },
    "BasePathMapping": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "BasePath": "latest",
        "DomainName": {
          "Ref": "APIDomainName"
        },
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "Stage": {
          "Ref": "Stage"
        }
      }
    },
    "Route53DNSRecord": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "HostedZoneId": {
          "Fn::ImportValue": "Route53HostedZone"
        },
        "Name": {
          "Fn::Join": [
            "",
            [
              "bootstrap.",
              {
                "Fn::ImportValue": "Route53ZoneName"
              },
              "."
            ]
          ]
        },
        "Type": "CNAME",
        "TTL": "60",
        "ResourceRecords": [
          {
            "Fn::GetAtt": [
              "APIDomainName",
              "DistributionDomainName"
            ]
          }
        ]
      }
    }
  },
  "Outputs": {
    "RootUrl": {
      "Description": "Root URL of the API gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGateway"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com"
          ]
        ]
      }
    },
    "APIGWCertificateArn": {
      "Description": "API GW CertificateArn",
      "Value": {
        "Ref": "CertificateArn"
      },
      "Export": {
        "Name": "APIGWCertificateArn"
      }
    }
  }
}

