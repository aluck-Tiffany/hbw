{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Microsoft ADFS",
  "Parameters": {
    "KeyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "InstanceType": {
      "Description": "Amazon EC2 instance type for the ADFS Servers",
      "Type": "String",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "m4.large"
      ]
    },
    "DomainDNSName": {
      "Description": "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
      "Type": "String",
      "Default": "example.com",
      "MinLength": "3",
      "MaxLength": "25",
      "AllowedPattern": "[a-zA-Z0-9]+\\..+"
    },
    "DomainNetBIOSName": {
      "Description": "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
      "Type": "String",
      "Default": "example",
      "MinLength": "1",
      "MaxLength": "15",
      "AllowedPattern": "[a-zA-Z0-9]+"
    },
    "ADServerNetBIOSName1": {
      "Description": "NetBIOS name of the existing Domain Controller in AZ1",
      "Type": "String",
      "Default": "DC1",
      "MinLength": "1",
      "MaxLength": "15",
      "AllowedPattern": "[a-zA-Z0-9]+"
    },
    "ADServerNetBIOSName2": {
      "Description": "NetBIOS name of the existing Domain Controller in AZ2",
      "Type": "String",
      "Default": "DC2",
      "MinLength": "1",
      "MaxLength": "15",
      "AllowedPattern": "[a-zA-Z0-9]+"
    },
    "ADFSServerNetBIOSName1": {
      "Description": "NetBIOS name of ADFS Server in AZ1",
      "Type": "String",
      "Default": "ADFS1",
      "MinLength": "1",
      "MaxLength": "15",
      "AllowedPattern": "[a-zA-Z0-9]+"
    },
    "ADFSServerNetBIOSName2": {
      "Description": "NetBIOS name of the existing Domain Controller in AZ2",
      "Type": "String",
      "Default": "ADFS2",
      "MinLength": "1",
      "MaxLength": "15",
      "AllowedPattern": "[a-zA-Z0-9]+"
    },
    "DomainAdminUser": {
      "Description": "User name for the account that will be added as Domain Administrator. This is separate from the default \"Administrator\" account",
      "Type": "String",
      "MinLength": "5",
      "MaxLength": "25",
      "AllowedPattern": "[a-zA-Z0-9_]*"
    },
    "DomainAdminPassword": {
      "Description": "Password for the domain admin user. Must be at least 8 characters containing letters, numbers and symbols",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "32",
      "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "NoEcho": "true"
    },
    "ADServer1PrivateIp": {
      "Description": "Fixed private IP for the first existing Active Directory server located in AZ1",
      "Type": "String"
    },
    "ADServer2PrivateIp": {
      "Description": "Fixed private IP for the second existing Active Directory serverr located in AZ2",
      "Type": "String"
    },
    "ADFSServer1PrivateIP": {
      "Description": "Fixed private IP for the first ADFS Server in AZ1",
      "Type": "String"
    },
    "ADFSServer2PrivateIP": {
      "Description": "Fixed private IP for the first ADFS Server in AZ1",
      "Type": "String"
    },
    "DomainMemberSGID": {
      "Description": "ID of the Domain Member Security Group (e.g., sg-7f16e910)",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "VPC": {
      "Description": "ID of the VPC (e.g., vpc-0343606e)",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PrivateSubnet1Id": {
      "Description": "ID of the subnet you want to provision the first Exchange Server into (e.g., subnet-a0246dcd)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PrivateSubnet2Id": {
      "Description": "ID of the subnet you want to provision the second Exchange Server into (e.g., subnet-e3246d8e)",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "VPCCIDR": {
      "Description": "CIDR Block used by the VPC",
      "Type": "String",
      "AllowedPattern": "[0-9]+\\..+"
    },
    "CertURL": {
      "Description": "SSL Cert S3 URL in the format of s3://bucketname/certname.pfx",
      "Type": "String",
      "AllowedPattern": "s3://.+/.+"
    },
    "CertPassword": {
      "Description": "Password for SSL Cert",
      "Type": "String",
      "NoEcho": "true"
    },
    "IamRole": {
      "Description": "IAM Role with S3 Readonly access permission",
      "Type": "String"
    }
  },
  "Resources": {
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IamRole"
          }
        ]
      }
    },
    "ADFS1": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config": [
              "setup",
              "install"
            ]
          },
          "setup": {
            "files": {
              "C:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.ADFS1.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r ADFS1",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": "https://s3-ap-southeast-2.amazonaws.com/dcp-install/Unzip-Archive.ps1"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/utilities/latest/modules/AWSQuickStart.zip"
              },
              "C:\\cfn\\scripts\\Install-ADFS.ps1": {
                "source": "https://s3-ap-southeast-2.amazonaws.com/dcp-install/Install-ADFSWithPubCert.ps1"
              },
              "C:\\cfn\\scripts\\Install.bat": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ADFS.ps1 -DomainDNSName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -DCName '",
                      {
                        "Ref": "ADServerNetBIOSName1"
                      },
                      "' -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -CertURL '",
                      {
                        "Ref": "CertURL"
                      },
                      "' -CertPassword '",
                      {
                        "Ref": "CertPassword"
                      },
                      "' -FirstServer\"",
                      "\n"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "ADFS1WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "install": {
            "commands": {
              "a-disable-win-fw": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "b-rename-computer": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"Rename-Computer -NewName '",
                      {
                        "Ref": "ADFSServerNetBIOSName1"
                      },
                      "' -Restart\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "c-set-dns-servers": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"",
                      "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                      {
                        "Ref": "ADServer1PrivateIp"
                      },
                      ",",
                      {
                        "Ref": "ADServer2PrivateIp"
                      },
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "30"
              },
              "d-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-Command \"",
                      "Add-Computer -DomainName ",
                      {
                        "Ref": "DomainDNSName"
                      },
                      " -Credential ",
                      "(New-Object System.Management.Automation.PSCredential('",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "',",
                      "(ConvertTo-SecureString ",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      " -AsPlainText -Force))) ",
                      "-Restart\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "e-enable-autologon": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon -Value 1",
                      ";",
                      "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName -Value ",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "@",
                      {
                        "Ref": "DomainDNSName"
                      },
                      " | out-null",
                      ";",
                      "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword -Value ",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "f-set-startup-script": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"New-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce -Name InstallADFS -Value C:\\cfn\\scripts\\Install.bat",
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "g-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "h-disable-autologon": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon",
                      ";",
                      "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName",
                      ";",
                      "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword",
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "i-wait": {
                "command": "powershell.exe -Command \"Start-Sleep -Seconds 300\"",
                "waitAfterCompletion": "0"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "WS2012R2"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet1Id"
        },
        "PrivateIpAddress": {
          "Ref": "ADFSServer1PrivateIP"
        },
        "SecurityGroupIds": [
          {
            "Ref": "ADFSSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "ADFSServerNetBIOSName1"
            }
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r ADFS1 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "ADFS2": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "ADFS1WaitCondition",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "configSets": {
            "config": [
              "setup",
              "install"
            ]
          },
          "setup": {
            "files": {
              "C:\\cfn\\cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.ADFS2.Metadata.AWS::CloudFormation::Init\n",
                      "action=cfn-init.exe -v -s ",
                      {
                        "Ref": "AWS::StackId"
                      },
                      " -r ADFS2",
                      " --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                }
              },
              "C:\\cfn\\scripts\\Unzip-Archive.ps1": {
                "source": "https://s3-ap-southeast-2.amazonaws.com/dcp-install/Unzip-Archive.ps1"
              },
              "C:\\cfn\\modules\\AWSQuickStart.zip": {
                "source": "https://s3.amazonaws.com/quickstart-reference/microsoft/utilities/latest/modules/AWSQuickStart.zip"
              },
              "C:\\cfn\\scripts\\Install-ADFS.ps1": {
                "source": "https://s3-ap-southeast-2.amazonaws.com/dcp-install/Install-ADFSWithPubCert.ps1"
              },
              "C:\\cfn\\scripts\\Install.bat": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"C:\\cfn\\scripts\\Install-ADFS.ps1 -DomainDNSName '",
                      {
                        "Ref": "DomainDNSName"
                      },
                      "' -DCName '",
                      {
                        "Ref": "ADServerNetBIOSName1"
                      },
                      "' -DomainNetBIOSName '",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "' -UserName '",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "' -Password '",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "' -CertURL '",
                      {
                        "Ref": "CertURL"
                      },
                      "' -CertPassword '",
                      {
                        "Ref": "CertPassword"
                      },
                      "' -ADFSServerNetBIOSName1 '",
                      {
                        "Ref": "ADFSServerNetBIOSName1"
                      },
                      "'\"",
                      "\n"
                    ]
                  ]
                }
              }
            },
            "commands": {
              "a-set-execution-policy": {
                "command": "powershell.exe -Command \"Set-ExecutionPolicy RemoteSigned -Force\"",
                "waitAfterCompletion": "0"
              },
              "b-unpack-quickstart-module": {
                "command": "powershell.exe -Command C:\\cfn\\scripts\\Unzip-Archive.ps1 -Source C:\\cfn\\modules\\AWSQuickStart.zip -Destination C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\Modules\\",
                "waitAfterCompletion": "0"
              },
              "c-init-quickstart-module": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"",
                      "New-AWSQuickStartWaitHandle -Handle '",
                      {
                        "Ref": "ADFS2WaitHandle"
                      },
                      "'\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              }
            },
            "services": {
              "windows": {
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "C:\\cfn\\cfn-hup.conf",
                    "C:\\cfn\\hooks.d\\cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          },
          "install": {
            "commands": {
              "a-disable-win-fw": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "b-rename-computer": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command \"Rename-Computer -NewName '",
                      {
                        "Ref": "ADFSServerNetBIOSName2"
                      },
                      "' -Restart\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "c-set-dns-servers": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"",
                      "Get-NetAdapter | Set-DnsClientServerAddress -ServerAddresses ",
                      {
                        "Ref": "ADServer2PrivateIp"
                      },
                      ",",
                      {
                        "Ref": "ADServer1PrivateIp"
                      },
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "30"
              },
              "d-join-domain": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe ",
                      "-Command \"",
                      "Add-Computer -DomainName ",
                      {
                        "Ref": "DomainDNSName"
                      },
                      " -Credential ",
                      "(New-Object System.Management.Automation.PSCredential('",
                      {
                        "Ref": "DomainNetBIOSName"
                      },
                      "\\",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "',",
                      "(ConvertTo-SecureString ",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      " -AsPlainText -Force))) ",
                      "-Restart\""
                    ]
                  ]
                },
                "waitAfterCompletion": "forever"
              },
              "e-enable-autologon": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon -Value 1",
                      ";",
                      "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName -Value ",
                      {
                        "Ref": "DomainAdminUser"
                      },
                      "@",
                      {
                        "Ref": "DomainDNSName"
                      },
                      " | out-null",
                      ";",
                      "New-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword -Value ",
                      {
                        "Ref": "DomainAdminPassword"
                      },
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "f-set-startup-script": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"New-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce -Name InstallADFS -Value C:\\cfn\\scripts\\Install.bat",
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "g-reboot": {
                "command": "powershell.exe -Command \"Restart-Computer -Force\"",
                "waitAfterCompletion": "forever"
              },
              "h-disable-autologon": {
                "command": {
                  "Fn::Join": [
                    "",
                    [
                      "powershell.exe -Command ",
                      "\"Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name AutoAdminLogon",
                      ";",
                      "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultUserName",
                      ";",
                      "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon' -Name DefaultPassword",
                      "\""
                    ]
                  ]
                },
                "waitAfterCompletion": "0"
              },
              "i-wait": {
                "command": "powershell.exe -Command \"Start-Sleep -Seconds 300\"",
                "waitAfterCompletion": "0"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AWSAMIRegionMap",
            {
              "Ref": "AWS::Region"
            },
            "WS2012R2"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet2Id"
        },
        "PrivateIpAddress": {
          "Ref": "ADFSServer2PrivateIP"
        },
        "SecurityGroupIds": [
          {
            "Ref": "ADFSSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "ADFSServerNetBIOSName2"
            }
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100",
              "VolumeType": "gp2"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyPairName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>\n",
                "cfn-init.exe -v -c config -s ",
                {
                  "Ref": "AWS::StackId"
                },
                " -r ADFS2 ",
                " --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "ADFSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable traffic to ADFS servers",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "SourceSecurityGroupId": {
              "Ref": "ADFSELBSecurityGroup"
            }
          },
          {
            "IpProtocol": "-1",
            "CidrIp": {
              "Ref": "VPCCIDR"
            }
          }
        ]
      }
    },
    "ADFSELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable traffic to ADFS from the Intranet",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": {
              "Ref": "VPCCIDR"
            }
          }
        ]
      }
    },
    "ADFSLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "DependsOn": "ADFS2WaitCondition",
      "Properties": {
        "Subnets": [
          {
            "Ref": "PrivateSubnet1Id"
          },
          {
            "Ref": "PrivateSubnet2Id"
          }
        ],
        "Scheme": "internal",
        "SecurityGroups": [
          {
            "Ref": "ADFSELBSecurityGroup"
          }
        ],
        "CrossZone": "true",
        "Listeners": [
          {
            "LoadBalancerPort": "443",
            "InstancePort": "443",
            "Protocol": "TCP"
          }
        ],
        "Instances": [
          {
            "Ref": "ADFS1"
          },
          {
            "Ref": "ADFS2"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "ADFSELB"
          }
        ]
      }
    },
    "ADFS1WaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "ADFS1",
      "Properties": {
        "Handle": {
          "Ref": "ADFS1WaitHandle"
        },
        "Timeout": "3600"
      }
    },
    "ADFS1WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    },
    "ADFS2WaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "DependsOn": "ADFS2",
      "Properties": {
        "Handle": {
          "Ref": "ADFS2WaitHandle"
        },
        "Timeout": "3600"
      }
    },
    "ADFS2WaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle"
    }
  },
  "Outputs": {
    "ADFSELBEndpoint": {
      "Value": {
        "Fn::GetAtt": [
          "ADFSLoadBalancer",
          "DNSName"
        ]
      },
      "Description": "ADFS ELB Endpoint"
    }
  }
}