{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Image bakery functions",
  "Parameters": {
    "Win2012ImageId": {
      "Type": "String",
      "Default": "ami-46f1e925"
    },
    "Win2012SQL2014ImageId": {
      "Type": "String",
      "Default": "ami-598d903a"
    },
    "Win2016ImageId": {
      "Type": "String",
      "Default": "ami-42638120"
    },
    "AmazonLinuxImageId": {
      "Type": "String",
      "Default": "ami-162c2575"
    },
    "RHEL7ImageId": {
      "Type": "String",
      "Default": "ami-9a3322f9"
    }
  },
  "Conditions": {
    "HasWin2012ImageId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Win2012ImageId"
            },
            ""
          ]
        }
      ]
    },
    "HasWin2012SQL2014ImageId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Win2012SQL2014ImageId"
            },
            ""
          ]
        }
      ]
    },
    "HasWin2016ImageId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "Win2016ImageId"
            },
            ""
          ]
        }
      ]
    },
    "HasAmazonLinuxImageId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "AmazonLinuxImageId"
            },
            ""
          ]
        }
      ]
    },
    "HasRHEL7ImageId": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "RHEL7ImageId"
            },
            ""
          ]
        }
      ]
    }
  },
  "Resources": {
    "ShareSnapshotFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\"use strict\";var AWS=require(\"aws-sdk\"),ec2=new AWS.EC2,kms=new AWS.KMS,costCentre=process.env.costCentre?process.env.costCentre:\"management\",keyId=process.env.keyId?process.env.keyId:null,getSnapshotId=function(e){return e.substr(e.indexOf(\"/\")+1)},getKeyId=function(){return console.log(\"getKeyId\"),new Promise(function(e,n){keyId?e(keyId):kms.listKeys({},function(t,o){if(t)n(t);else{var r=[],s=!0,c=!1,a=void 0;try{for(var i,u=o.Keys[Symbol.iterator]();!(s=(i=u.next()).done);s=!0){var d=i.value;r.push(describeKey(d.KeyId))}}catch(e){c=!0,a=e}finally{try{!s&&u.return&&u.return()}finally{if(c)throw a}}Promise.all(r).then(function(n){var t=!0,o=!1,r=void 0;try{for(var s,c=n[Symbol.iterator]();!(t=(s=c.next()).done);t=!0){var a=s.value;\"Custom Key\"===a.KeyMetadata.Description&&e(a.KeyMetadata.KeyId)}}catch(e){o=!0,r=e}finally{try{!t&&c.return&&c.return()}finally{if(o)throw r}}}).catch(function(e){n(e)})}})})},describeKey=function(e){return console.log(\"describeKey\"),new Promise(function(n,t){var o={KeyId:e};kms.describeKey(o,function(e,o){e?t(e):n(o)})})},describeSnapshot=function(e,n){return console.log(\"describeSnapshot\",e,n),new Promise(function(t,o){var r={SnapshotIds:[e]};n&&(r.OwnerIds=[n]),ec2.describeSnapshots(r,function(e,n){e?o(e):t(n)})})},copySnapshot=function(e,n,t){return console.log(\"copySnapshot\"),new Promise(function(o,r){var s={SourceRegion:\"ap-southeast-2\",SourceSnapshotId:e,Description:n,Encrypted:!0,KmsKeyId:t};ec2.copySnapshot(s,function(e,n){e?r(e):o(n)})})},createTags=function(e,n){return console.log(\"createTags\"),new Promise(function(t,o){ec2.createTags({Resources:[n],Tags:[{Key:\"CostCentre\",Value:e}]},function(e,n){e?o(e):t(n)})})};exports.handler=function(e,n,t){var o=getSnapshotId(e.detail.snapshot_id);getKeyId().then(function(n){return keyId=n,describeSnapshot(o,e.detail.source)}).then(function(e){return copySnapshot(o,e.Snapshots[0].Description,keyId)}).then(function(e){return createTags(costCentre,e.SnapshotId)}).then(function(){t(null)}).catch(function(e){t(e)})};\n"
        },
        "Description": "image-bakery-share-snapshot",
        "FunctionName": "image-bakery-share-snapshot",
        "Handler": "index.handler",
        "MemorySize": "128",
        "Timeout": "15",
        "Runtime": "nodejs4.3",
        "Role": {
          "Fn::GetAtt": [
            "ShareSnapshotRole",
            "Arn"
          ]
        }
      }
    },
    "ShareSnapshotRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "image-bakery-share-snapshot",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeSnapshots",
                    "ec2:CopySnapshot",
                    "ec2:CreateTags",
                    "kms:ListKeys",
                    "kms:DescribeKey",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:CreateGrant"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "RoleName": "image-bakery-share-snapshot"
      }
    },
    "ShareSnapshotPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "ShareSnapshotFunction"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "ShareSnapshotRule",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com"
      }
    },
    "ShareSnapshotRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ec2"
          ],
          "detail-type": [
            "EBS Snapshot Notification"
          ],
          "detail": {
            "event": [
              "shareSnapshot"
            ],
            "result": [
              "succeeded"
            ]
          }
        },
        "Name": "image-bakery-share-snapshot",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ShareSnapshotFunction",
                "Arn"
              ]
            },
            "Id": "image-bakery-share-snapshot"
          }
        ]
      }
    },
    "CopySnapshotFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "\"use strict\";var AWS=require(\"aws-sdk\"),ec2=new AWS.EC2,name=void 0,instanceId=void 0,device=null,getSnapshotId=function(e){return e.substr(e.indexOf(\"/\")+1)},describeSnapshot=function(e,n){return console.log(\"describeSnapshot\"),new Promise(function(t,o){var a={SnapshotIds:[e]};n&&(a.OwnerIds=[n]),ec2.describeSnapshots(a,function(e,n){e?o(e):t(n)})})},describeInstances=function(e){return console.log(\"describeInstances\"),new Promise(function(n,t){ec2.describeInstances({Filters:[{Name:\"tag:image-bakery\",Values:[e.substr(0,e.indexOf(\" \"))]},{Name:\"instance-state-name\",Values:[\"stopped\"]}]},function(e,o){e?t(e):n(o)})})},detachVolume=function(e){return console.log(\"detachVolume\"),new Promise(function(n,t){var o={VolumeId:e};ec2.detachVolume(o,function(e,o){e?t(e):(device=o.Device,n(o))})})},createVolume=function(e){return console.log(\"createVolume\"),new Promise(function(n,t){var o={AvailabilityZone:\"ap-southeast-2a\",VolumeType:\"gp2\",SnapshotId:e};ec2.createVolume(o,function(e,o){e?t(e):n(o)})})},waitForVolumeAvailable=function(e){return console.log(\"waitForVolumeAvailable\"),new Promise(function(n,t){ec2.waitFor(\"volumeAvailable\",{VolumeIds:[e]},function(e,o){e?t(e):n(o)})})},attachVolume=function(e,n){return console.log(\"attachVolume\"),new Promise(function(t,o){var a={Device:device,InstanceId:n,VolumeId:e};ec2.attachVolume(a,function(e,n){e?o(e):t(n)})})},createImage=function(e,n){return console.log(\"createImage\"),new Promise(function(t,o){var a={InstanceId:e,Name:n};ec2.createImage(a,function(e,n){e?o(e):t(n)})})};exports.handler=function(e,n,t){console.log(JSON.stringify(e));var o=getSnapshotId(e.detail.snapshot_id);describeSnapshot(o).then(function(e){return name=e.Snapshots[0].Description,describeInstances(name)}).then(function(e){if(instanceId=e.Reservations[0].Instances[0].InstanceId,!(e.Reservations[0].Instances[0].BlockDeviceMappings.length>0))return new Promise(function(e){e()});var n=e.Reservations[0].Instances[0].RootDeviceName,t=!0,o=!1,a=void 0;try{for(var c,i=e.Reservations[0].Instances[0].BlockDeviceMappings[Symbol.iterator]();!(t=(c=i.next()).done);t=!0){var r=c.value;if(r.DeviceName===n)return detachVolume(r.Ebs.VolumeId)}}catch(e){o=!0,a=e}finally{try{!t&&i.return&&i.return()}finally{if(o)throw a}}}).then(function(){return createVolume(o)}).then(function(e){return waitForVolumeAvailable(e.VolumeId)}).then(function(e){return attachVolume(e.Volumes[0].VolumeId,instanceId)}).then(function(){return createImage(instanceId,name)}).then(function(){t(null)}).catch(function(e){t(e)})};\n"
        },
        "Description": "image-bakery-copy-snapshot",
        "FunctionName": "image-bakery-copy-snapshot",
        "Handler": "index.handler",
        "MemorySize": "128",
        "Timeout": "60",
        "Runtime": "nodejs4.3",
        "Role": {
          "Fn::GetAtt": [
            "CopySnapshotRole",
            "Arn"
          ]
        }
      }
    },
    "CopySnapshotRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "image-bakery-copy-snapshot",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeSnapshots",
                    "ec2:DescribeInstances",
                    "ec2:DetachVolume",
                    "ec2:CreateVolume",
                    "ec2:AttachVolume",
                    "ec2:CreateImage",
                    "ec2:DescribeVolumes",
                    "ec2:DescribeVolumeStatus",
                    "kms:Decrypt",
                    "kms:ReEncrypt*",
                    "kms:GenerateDataKeyWithoutPlaintext",
                    "kms:CreateGrant"
                  ],
                  "Resource": [
                    "*"
                  ]
                }
              ]
            }
          }
        ],
        "RoleName": "image-bakery-copy-snapshot"
      }
    },
    "CopySnapshotPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "CopySnapshotFunction"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "CopySnapshotRule",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com"
      }
    },
    "CopySnapshotRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventPattern": {
          "source": [
            "aws.ec2"
          ],
          "detail-type": [
            "EBS Snapshot Notification"
          ],
          "detail": {
            "event": [
              "copySnapshot"
            ],
            "result": [
              "succeeded"
            ]
          }
        },
        "Name": "image-bakery-copy-snapshot",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "CopySnapshotFunction",
                "Arn"
              ]
            },
            "Id": "image-bakery-copy-snapshot"
          }
        ]
      }
    },
    "BakeryWindows2012R2Instance": {
      "Condition": "HasWin2012ImageId",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "Win2012ImageId"
        },
        "InstanceType": "t2.micro",
        "SubnetId": {
          "Fn::ImportValue": "RestrictedASubnet"
        },
        "DisableApiTermination": false,
        "Tags": [
          {
            "Key": "CostCentre",
            "Value": "management"
          },
          {
            "Key": "image-bakery",
            "Value": "windows-2012-r2"
          },
          {
            "Key": "Name",
            "Value": "Windows 2012 R2 Image Bakery Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<powershell>\n",
                "shutdown /s /f /t 60\n",
                "</powershell>"
              ]
            ]
          }
        }
      }
    },
    "BakeryWindows2012R2SQL2014Instance": {
      "Condition": "HasWin2012SQL2014ImageId",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "Win2012SQL2014ImageId"
        },
        "InstanceType": "m4.xlarge",
        "SubnetId": {
          "Fn::ImportValue": "RestrictedASubnet"
        },
        "DisableApiTermination": false,
        "Tags": [
          {
            "Key": "CostCentre",
            "Value": "management"
          },
          {
            "Key": "image-bakery",
            "Value": "windows-2012-r2-sql-2014"
          },
          {
            "Key": "Name",
            "Value": "Windows 2012 R2 + SQL 2014 Image Bakery Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<powershell>\n",
                "shutdown /s /f /t 60\n",
                "</powershell>"
              ]
            ]
          }
        }
      }
    },
    "BakeryWindows2016Instance": {
      "Condition": "HasWin2016ImageId",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "Win2016ImageId"
        },
        "InstanceType": "t2.micro",
        "SubnetId": {
          "Fn::ImportValue": "RestrictedASubnet"
        },
        "DisableApiTermination": false,
        "Tags": [
          {
            "Key": "CostCentre",
            "Value": "management"
          },
          {
            "Key": "image-bakery",
            "Value": "windows-2016"
          },
          {
            "Key": "Name",
            "Value": "Windows 2016 Image Bakery Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<powershell>\n",
                "shutdown /s /f /t 60\n",
                "</powershell>"
              ]
            ]
          }
        }
      }
    },
    "BakeryAmazonLinuxInstance": {
      "Condition": "HasAmazonLinuxImageId",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "AmazonLinuxImageId"
        },
        "InstanceType": "t2.micro",
        "SubnetId": {
          "Fn::ImportValue": "RestrictedASubnet"
        },
        "DisableApiTermination": false,
        "Tags": [
          {
            "Key": "CostCentre",
            "Value": "management"
          },
          {
            "Key": "image-bakery",
            "Value": "amazon-linux"
          },
          {
            "Key": "Name",
            "Value": "Amazon Linux Image Bakery Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "init 0"
              ]
            ]
          }
        }
      }
    },
    "BakeryRHEL7Instance": {
      "Condition": "HasRHEL7ImageId",
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Ref": "RHEL7ImageId"
        },
        "InstanceType": "t2.micro",
        "SubnetId": {
          "Fn::ImportValue": "RestrictedASubnet"
        },
        "DisableApiTermination": false,
        "Tags": [
          {
            "Key": "CostCentre",
            "Value": "management"
          },
          {
            "Key": "image-bakery",
            "Value": "rhel-7"
          },
          {
            "Key": "Name",
            "Value": "RHEL 7 Image Bakery Instance"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "systemctl halt"
              ]
            ]
          }
        }
      }
    }
  }
}